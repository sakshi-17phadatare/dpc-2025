public class SubstringCounter {
    public static int countSubstringsWithKDistinct(String s, int k) {
        return countAtMostK(s, k) - countAtMostK(s, k - 1);
    }

    private static int countAtMostK(String s, int k) {
        int left = 0, right = 0, count = 0;
        Map<Character, Integer> freqMap = new HashMap<>();

        while (right < s.length()) {
            char c = s.charAt(right);
            freqMap.put(c, freqMap.getOrDefault(c, 0) + 1);

            while (freqMap.size() > k) {
                char leftChar = s.charAt(left);
                freqMap.put(leftChar, freqMap.get(leftChar) - 1);
                if (freqMap.get(leftChar) == 0) {
                    freqMap.remove(leftChar);
                }
                left++;
            }

            count += right - left + 1;
            right++;
        }

        return count;
    }

    public static void main(String[] args) {
        String s = "pqpqs";
        int k = 2;
        System.out.println(countSubstringsWithKDistinct(s, k)); // Output: 7
    }
}
